GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
Missing logger folder: tb_logs/MolModel
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name              | Type       | Params
-------------------------------------------------
0 | atom_preprocess   | ModuleList | 151 K 
1 | cheb_convolutions | ModuleList | 98.6 K
2 | postprocess       | ModuleList | 33.5 K
3 | output_layer      | Linear     | 129   
-------------------------------------------------
283 K     Trainable params
0         Non-trainable params
283 K     Total params
1.135     Total estimated model params size (MB)
2024-03-31 23:56:41.111894: I external/local_tsl/tsl/cuda/cudart_stub.cc:31] Could not find cuda drivers on your machine, GPU will not be used.
2024-03-31 23:56:41.160908: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2024-03-31 23:56:41.160975: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2024-03-31 23:56:41.162336: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-03-31 23:56:42.117209: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
SLURM auto-requeueing enabled. Setting signal handlers.
cuda True
NVIDIA GeForce RTX 2080 SUPER
Model:
 MoleculeModel(
  (atom_preprocess): ModuleList(
    (0): Sequential(
      (atom_linear_0): Linear(in_features=133, out_features=128, bias=True)
      (atom_bn_0): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (atom_activation_0): PReLU(num_parameters=1)
      (atom_dropout_0): Dropout(p=0.0, inplace=False)
    )
    (1): Sequential(
      (atom_linear_1): Linear(in_features=128, out_features=128, bias=True)
      (atom_bn_1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (atom_activation_1): PReLU(num_parameters=1)
      (atom_dropout_1): Dropout(p=0.0, inplace=False)
    )
    (2): Sequential(
      (atom_linear_2): Linear(in_features=128, out_features=128, bias=True)
      (atom_bn_2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (atom_activation_2): PReLU(num_parameters=1)
      (atom_dropout_2): Dropout(p=0.0, inplace=False)
    )
    (3): Sequential(
      (atom_linear_3): Linear(in_features=128, out_features=128, bias=True)
      (atom_bn_3): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (atom_activation_3): PReLU(num_parameters=1)
      (atom_dropout_3): Dropout(p=0.0, inplace=False)
    )
    (4): Sequential(
      (atom_linear_4): Linear(in_features=128, out_features=128, bias=True)
      (atom_bn_4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (atom_activation_4): PReLU(num_parameters=1)
      (atom_dropout_4): Dropout(p=0.0, inplace=False)
    )
    (5): Sequential(
      (atom_linear_5): Linear(in_features=128, out_features=128, bias=True)
      (atom_bn_5): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (atom_activation_5): PReLU(num_parameters=1)
      (atom_dropout_5): Dropout(p=0.0, inplace=False)
    )
    (6): Sequential(
      (atom_linear_6): Linear(in_features=128, out_features=128, bias=True)
      (atom_bn_6): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (atom_activation_6): PReLU(num_parameters=1)
      (atom_dropout_6): Dropout(p=0.0, inplace=False)
    )
    (7): Sequential(
      (atom_linear_7): Linear(in_features=128, out_features=128, bias=True)
      (atom_bn_7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (atom_activation_7): PReLU(num_parameters=1)
      (atom_dropout_7): Dropout(p=0.0, inplace=False)
    )
    (8): Sequential(
      (atom_linear_8): Linear(in_features=128, out_features=128, bias=True)
      (atom_bn_8): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (atom_activation_8): PReLU(num_parameters=1)
      (atom_dropout_8): Dropout(p=0.0, inplace=False)
    )
  )
  (cheb_convolutions): ModuleList(
    (0): ChebConv(128, 128, K=3, normalization=sym)
    (1): ChebConv(128, 128, K=3, normalization=sym)
  )
  (postprocess): ModuleList(
    (0): Sequential(
      (post_linear_0): Linear(in_features=128, out_features=128, bias=True)
      (post_bn_0): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (post_activation_0): PReLU(num_parameters=1)
      (post_dropout_0): Dropout(p=0.0, inplace=False)
    )
    (1): Sequential(
      (post_linear_1): Linear(in_features=128, out_features=128, bias=True)
      (post_bn_1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (post_activation_1): PReLU(num_parameters=1)
      (post_dropout_1): Dropout(p=0.0, inplace=False)
    )
  )
  (output_layer): Linear(in_features=128, out_features=1, bias=True)
)
Traceback (most recent call last):
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 38, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 650, in _fit_impl
    self._run(model, ckpt_path=self.ckpt_path)
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1103, in _run
    results = self._run_stage()
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1182, in _run_stage
    self._run_train()
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1194, in _run_train
    with isolate_rng():
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/contextlib.py", line 119, in __enter__
    return next(self.gen)
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/utilities/seed.py", line 42, in isolate_rng
    states = _collect_rng_states()
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/lightning_fabric/utilities/seed.py", line 111, in _collect_rng_states
    "torch.cuda": torch.cuda.get_rng_state_all(),
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/torch/cuda/random.py", line 39, in get_rng_state_all
    results.append(get_rng_state(i))
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/torch/cuda/random.py", line 31, in get_rng_state
    return default_generator.get_state()
RuntimeError: CUDA error: device kernel image is invalid
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nikolenko/work/gat/ChebConv.py", line 338, in <module>
    trainer.fit(model, data_module)
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 608, in fit
    call._call_and_handle_interrupt(
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 63, in _call_and_handle_interrupt
    trainer._teardown()
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1166, in _teardown
    self.strategy.teardown()
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 496, in teardown
    self.lightning_module.cpu()
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/lightning_fabric/utilities/device_dtype_mixin.py", line 78, in cpu
    return super().cpu()
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 710, in cpu
    return self._apply(lambda t: t.cpu())
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 570, in _apply
    module._apply(fn)
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 570, in _apply
    module._apply(fn)
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 570, in _apply
    module._apply(fn)
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 593, in _apply
    param_applied = fn(param)
  File "/opt/anaconda/envs/torch_geom_2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 710, in <lambda>
    return self._apply(lambda t: t.cpu())
RuntimeError: CUDA error: device kernel image is invalid
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
